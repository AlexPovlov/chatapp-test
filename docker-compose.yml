version: "3.3"

services:

    nginx:
        image: nginx:latest
        restart: always
        volumes:
            - ./_docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./:/var/www
            - ./_docker/nginx/templates:/etc/nginx/templates
        environment:
            - NGINX_HOST=${APP_URL}
        ports:
            - ${APP_PORT}:80
        depends_on:
            - app
        networks:
            - app-network
        container_name: nginx_${APP_NAME}

    app: &base_app
        build:
            context: .
            dockerfile: _docker/app/app.dockerfile
        user: "33:33"
        volumes:
            - ./:/var/www
        depends_on:
            - postgres
        networks:
            - app-network
        container_name: app_${APP_NAME}

    queue:
        <<: *base_app
        restart: always
        command: php artisan queue:work
        container_name: queue_${APP_NAME}

    scheduler:
        <<: *base_app
        restart: always
        command: php artisan schedule:work
        container_name: scheduler_${APP_NAME}

    postgres:
        image: postgres:alpine
        ports:
            - 5435:5432
        restart: always
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
            PGDATA: /var/lib/postgresql/data
        networks:
            - app-network
        volumes:
            - pgdata:/var/lib/postgresql/data
        container_name: postgres_${APP_NAME}

networks:
    app-network:
        driver: bridge
        name: ${APP_NAME}_network

volumes:
    pgdata:
        external: true
        name: pg${APP_NAME}data
